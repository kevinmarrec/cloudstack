name: Continuous Integration

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'

permissions:
  contents: read
  pull-requests: read

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      workspaces: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache dependencies & pre-built lint configs
        id: cache
        uses: actions/cache@v4
        with:
          key: ${{ hashFiles('bun.lockb', 'packages/*lint-config/src/**') }}
          path: |
            node_modules
            packages/*lint-config/dist

      - name: Set up Bun
        if: steps.cache.outputs.cache-hit != 'true'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile --ignore-scripts

      - name: Build lint configs
        if: steps.cache.outputs.cache-hit != 'true'
        run: bun --filter '@kevinmarrec/cloudstack-*lint-config' build --silent

      - name: Filter paths
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            packages/eslint-config:
              - '.github/workflows/ci.yml'
              - 'packages/eslint-config/**'
            packages/stylelint-config:
              - '.github/workflows/ci.yml'
              - 'packages/stylelint-config/**'
            packages/unocss-preset:
              - '.github/workflows/ci.yml'
              - 'packages/unocss-preset/**'
            packages/frontend:
              - '.github/workflows/ci.yml'
              - 'packages/frontend/**'
  check:
    name: Check
    runs-on: ubuntu-latest
    needs: setup
    if: ${{ needs.setup.outputs.workspaces != '[]' }}
    strategy:
      matrix:
        workspace: ${{ fromJSON(needs.setup.outputs.workspaces) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Restore cached dependencies & pre-built lint configs
        uses: actions/cache/restore@v4
        with:
          key: ${{ hashFiles('bun.lockb', 'packages/*lint-config/src/**') }}
          path: |
            node_modules
            packages/*lint-config/dist

      - name: Check unused files, dependencies, and exports
        run: bun knip -W ${{ matrix.workspace }}

      - name: Lint
        run: bun --cwd ${{ matrix.workspace }} lint

      - name: Type check
        run: bun --cwd ${{ matrix.workspace }} typecheck

      - name: Unit tests
        run: bun --cwd ${{ matrix.workspace }} test --run
