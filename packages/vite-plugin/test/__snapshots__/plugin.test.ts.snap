// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`plugin > should inject dark mode script in index.html 1`] = `
"<html>
<script>(function () {
  const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches
  const setting = localStorage.getItem('vueuse-color-scheme') || 'auto'
  if (setting === 'dark' || (prefersDark && setting !== 'light'))
    document.documentElement.classList.toggle('dark', true)
})()</script>

<script type="module" src="/@id/virtual:vue-devtools-path:overlay.js"></script>
<script type="module" src="/@id/virtual:vue-inspector-path:load.js"></script>

<script type="module" src="/@vite/client"></script>
</html>"
`;

exports[`plugin > with all integrations 1`] = `
[
  "vite-plugin-pwa",
  "unocss:transformers:pre",
  "unocss:global:content",
  "unocss:global",
  "unplugin-vue-router",
  "vite-plugin-inspect",
  "vite-plugin-vue-devtools",
  "vite:cloudstack:global",
  "vite:cloudstack:config",
  "vite:cloudstack:dark-mode",
  "vite-plugin-vue-layouts",
  "vite-plugin-pwa:dev-sw",
  "unocss:config",
  "unocss:transformers:undefined",
  "unocss:devtools",
  "unocss:api",
  "unocss:inspector",
  "vite:vue",
  "unplugin-auto-import",
  "unplugin-vue-components",
  "vite-plugin-pwa:info",
  "vite-plugin-pwa:pwa-assets",
  "unocss:transformers:post",
  "unocss:global:post",
]
`;

exports[`plugin > with options: { autoImports: false } 1`] = `
[
  "vite-plugin-inspect",
  "vite-plugin-vue-devtools",
  "vite:cloudstack:global",
  "vite:cloudstack:config",
  "vite:cloudstack:dark-mode",
  "vite:vue",
]
`;

exports[`plugin > with options: { devtools: false } 1`] = `
[
  "vite:cloudstack:global",
  "vite:cloudstack:config",
  "vite:cloudstack:dark-mode",
  "vite:vue",
  "unplugin-auto-import",
]
`;

exports[`plugin > with options: {} 1`] = `
[
  "vite-plugin-inspect",
  "vite-plugin-vue-devtools",
  "vite:cloudstack:global",
  "vite:cloudstack:config",
  "vite:cloudstack:dark-mode",
  "vite:vue",
  "unplugin-auto-import",
]
`;

exports[`virtual module > should generate virtual module content, with options: { router: {} } 1`] = `
"import { ViteSSG } from 'vite-ssg'
import { routes } from 'vue-router/auto-routes'
import 'the-new-css-reset'
export const Power = (App, fn) => ViteSSG(App, { base: import.meta.env.BASE_URL, routes }, fn)"
`;

exports[`virtual module > should generate virtual module content, with options: { router: {}, layouts: {} } 1`] = `
"import { ViteSSG } from 'vite-ssg'
import { routes } from 'vue-router/auto-routes'
import { setupLayouts } from 'virtual:generated-layouts'
import 'the-new-css-reset'
export const Power = (App, fn) => ViteSSG(App, { base: import.meta.env.BASE_URL, routes: setupLayouts(routes) }, fn)"
`;

exports[`virtual module > should generate virtual module content, with options: { unocss: {} } 1`] = `
"import { ViteSSG } from 'vite-ssg/single-page'
import 'the-new-css-reset'
import 'uno.css'
export const Power = (App, fn) => ViteSSG(App, fn)"
`;

exports[`virtual module > should generate virtual module content, with options: {} 1`] = `
"import { ViteSSG } from 'vite-ssg/single-page'
import 'the-new-css-reset'
export const Power = (App, fn) => ViteSSG(App, fn)"
`;
